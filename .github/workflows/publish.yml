name: Publish
on:
  push:
    tags:
      - '*'

jobs:
  build:
    name: Publish binaries
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-musl
          - i686-unknown-linux-musl
          - armv7-unknown-linux-musleabihf
          - aarch64-unknown-linux-musl
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: ${{ matrix.target }}
          override: true
      - name: set aarch64 gcc-prefix
        if: matrix.target == 'aarch64-unknown-linux-musl'
        run: |
          echo TARGET_PREFIX=aarch64-linux-gnu >> $GITHUB_ENV
      - name: set armv7 gcc-prefix
        if: matrix.target == 'armv7-unknown-linux-musleabihf'
        run: |
          echo TARGET_PREFIX=arm-linux-gnueabihf >> $GITHUB_ENV
      - name: Setup compiler
        run: |
          [[ -z $TARGET_PREFIX ]] && exit 0
          sudo apt install gcc-$TARGET_PREFIX
          mkdir .cargo
          cat >.cargo/config <<EOF
          [target.${{ matrix.target }}]
          linker = "${TARGET_PREFIX}-gcc"
          EOF
          echo STRIP_PREFIX="${TARGET_PREFIX}-" >> $GITHUB_ENV
      - name: Build
        run: cargo build --release --target ${{ matrix.target }} --locked
      - name: Package
        run: |
          version=$(basename ${{ github.ref }})
          ${STRIP_PREFIX}strip target/${{ matrix.target }}/release/nix-user-chroot
          install -D target/${{ matrix.target }}/release/nix-user-chroot dist/nix-user-chroot-bin-$version-${{ matrix.target }}
      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: dist/*
          tag: ${{ github.ref }}
          overwrite: true
          file_glob: true
      # publish-crates does not like this
      - name: Cleanup dist
        run: rm -r dist
  publish:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
            toolchain: stable
            override: true
      - uses: katyo/publish-crates@v2
        with:
          registry-token: ${{ secrets.CARGO_REGISTRY_TOKEN }}
